definitions:
  handler.ErrorResponse:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  user.LoginResp:
    properties:
      id:
        type: integer
      token:
        type: string
    type: object
  user.UserListResp:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      userList:
        items:
          $ref: '#/definitions/user.UserResp'
        type: array
    type: object
  user.UserResp:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      mobile:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  user.getUserListReq:
    properties:
      limit:
        minimum: 1
        type: integer
      page:
        minimum: 1
        type: integer
    required:
    - limit
    - page
    type: object
  user.loginReq:
    properties:
      email:
        maxLength: 50
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  user.registerReq:
    properties:
      email:
        maxLength: 50
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  user.updateUserReq:
    properties:
      age:
        maximum: 150
        minimum: 1
        type: integer
      email:
        maxLength: 50
        type: string
      mobile:
        maxLength: 11
        type: string
      name:
        maxLength: 20
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: go_backend API
  version: 0.0.1
paths:
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete user by id
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/user.UserResp'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get user by id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update user request
        in: body
        name: updateUserReq
        required: true
        schema:
          $ref: '#/definitions/user.updateUserReq'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update user by id
      tags:
      - User
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: login request
        in: body
        name: loginReq
        required: true
        schema:
          $ref: '#/definitions/user.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/user.LoginResp'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: User login
      tags:
      - User
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: User register
      parameters:
      - description: register request
        in: body
        name: registerReq
        required: true
        schema:
          $ref: '#/definitions/user.registerReq'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: forbidden
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: User register
      tags:
      - User
  /api/v1/user/userList:
    post:
      consumes:
      - application/json
      description: Get user list
      parameters:
      - description: get user list request
        in: body
        name: getUserListReq
        required: true
        schema:
          $ref: '#/definitions/user.getUserListReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/user.UserListResp'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get user list
      tags:
      - User
swagger: "2.0"
